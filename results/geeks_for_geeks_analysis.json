[
  {
    "Total Algorithms": 509,
    "Time Complexity Extracted": "492 extracted - 96.66011787819254%",
    "Space Complexity Extracted": "466 extracted - 91.55206286836935%",
    "URLs with problem": [
      "https://www.geeksforgeeks.org/centroid-decomposition-of-tree/",
      "https://www.geeksforgeeks.org/implement-stack-using-queue/",
      "https://www.geeksforgeeks.org/binomial-heap-2/",
      "https://www.geeksforgeeks.org/threaded-binary-tree/",
      "https://www.geeksforgeeks.org/optimal-substructure-property-in-dynamic-programming-dp-2/",
      "https://www.geeksforgeeks.org/randomized-algorithms-set-3-12-approximate-median/",
      "https://www.geeksforgeeks.org/efficiently-implement-k-queues-single-array/",
      "https://www.geeksforgeeks.org/data-structure-n-elements-o1-operations/",
      "https://www.geeksforgeeks.org/trie-insert-and-search/",
      "https://www.geeksforgeeks.org/strassens-matrix-multiplication/",
      "https://www.geeksforgeeks.org/deletion-in-red-black-tree/",
      "https://www.geeksforgeeks.org/randomized-algorithms-set-2-classification-and-applications/",
      "https://www.geeksforgeeks.org/0-1-knapsack-using-branch-and-bound/",
      "https://www.geeksforgeeks.org/insert-operation-in-b-tree/",
      "https://www.geeksforgeeks.org/introduction-of-b-tree-2/",
      "https://www.geeksforgeeks.org/delete-operation-in-b-tree/",
      "https://www.geeksforgeeks.org/traveling-salesman-problem-using-branch-and-bound-2/",
      "https://www.geeksforgeeks.org/insertion-in-splay-tree/",
      "https://www.geeksforgeeks.org/priority-queue-set-1-introduction/",
      "https://www.geeksforgeeks.org/binary-heap/",
      "https://www.geeksforgeeks.org/sparse-set/",
      "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/",
      "https://www.geeksforgeeks.org/interval-tree/",
      "https://www.geeksforgeeks.org/randomized-algorithms-set-1-introduction-and-analysis/",
      "https://www.geeksforgeeks.org/introduction-to-binary-tree-data-structure-and-algorithm-tutorials/",
      "https://www.geeksforgeeks.org/find-the-k-most-frequent-words-from-a-file/",
      "https://www.geeksforgeeks.org/kasais-algorithm-for-construction-of-lcp-array-from-suffix-array/"
    ],
    "Distinct Time Complexities": 126,
    "Distinct Space Complexities": 98,
    "Non Trusted Time Complexities": 17,
    "Non Trusted Space Complexities": 43,
    "Time Complexity": {
      "True Positive": 389,
      "False Positive": 103,
      "True Negative": 10,
      "False negative": 7,
      "Accuracy": 0.7838899803536346,
      "Precision": 0.790650406504065,
      "Recall": 0.9823232323232324,
      "F1 Score": 0.8761261261261262
    },
    "Space Complexity": {
      "True Positive": 335,
      "False Positive": 131,
      "True Negative": 41,
      "False negative": 2,
      "Accuracy": 0.7387033398821218,
      "Precision": 0.7188841201716738,
      "Recall": 0.9940652818991098,
      "F1 Score": 0.8343711083437111
    },
    "Time Complexity Classification": {
      "Constant complexity": 51,
      "Linear complexity": 179,
      "Exponential complexity": 6,
      "Polynomial complexity": 149,
      "Factorial complexity": 6,
      "Log complexity": 89
    },
    "Space Complexity Classification": {
      "Constant complexity": 156,
      "Linear complexity": 161,
      "Exponential complexity": 2,
      "Polynomial complexity": 102,
      "Factorial complexity": 2,
      "Log complexity": 39
    }
  }
]
