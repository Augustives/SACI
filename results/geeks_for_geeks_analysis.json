[
  {
    "Total Algorithms": 501,
    "Time Complexity Extracted": "479 extracted - 95.60878243512974%",
    "Space Complexity Extracted": "466 extracted - 93.01397205588822%",
    "URLs with problem": [
      "https://www.geeksforgeeks.org/randomized-algorithms-set-1-introduction-and-analysis/",
      "https://www.geeksforgeeks.org/randomized-algorithms-set-3-12-approximate-median/",
      "https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/",
      "https://www.geeksforgeeks.org/centroid-decomposition-of-tree/",
      "https://www.geeksforgeeks.org/optimal-substructure-property-in-dynamic-programming-dp-2/",
      "https://www.geeksforgeeks.org/efficiently-implement-k-queues-single-array/",
      "https://www.geeksforgeeks.org/delete-operation-in-b-tree/",
      "https://www.geeksforgeeks.org/binary-heap/",
      "https://www.geeksforgeeks.org/implement-stack-using-queue/",
      "https://www.geeksforgeeks.org/data-structure-n-elements-o1-operations/",
      "https://www.geeksforgeeks.org/introduction-and-array-implementation-of-queue/",
      "https://www.geeksforgeeks.org/lru-cache-implementation/",
      "https://www.geeksforgeeks.org/threaded-binary-tree/",
      "https://www.geeksforgeeks.org/traveling-salesman-problem-using-branch-and-bound-2/",
      "https://www.geeksforgeeks.org/insert-operation-in-b-tree/",
      "https://www.geeksforgeeks.org/insertion-in-splay-tree/",
      "https://www.geeksforgeeks.org/kasais-algorithm-for-construction-of-lcp-array-from-suffix-array/",
      "https://www.geeksforgeeks.org/trie-insert-and-search/",
      "https://www.geeksforgeeks.org/binomial-heap-2/",
      "https://www.geeksforgeeks.org/inorder-successor-in-binary-search-tree/",
      "https://www.geeksforgeeks.org/priority-queue-set-1-introduction/",
      "https://www.geeksforgeeks.org/strassens-matrix-multiplication/",
      "https://www.geeksforgeeks.org/implement-two-stacks-in-an-array/",
      "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/",
      "https://www.geeksforgeeks.org/find-the-k-most-frequent-words-from-a-file/",
      "https://www.geeksforgeeks.org/randomized-algorithms-set-2-classification-and-applications/",
      "https://www.geeksforgeeks.org/0-1-knapsack-using-branch-and-bound/",
      "https://www.geeksforgeeks.org/interval-tree/",
      "https://www.geeksforgeeks.org/sparse-set/"
    ],
    "Distinct Time Complexities": 128,
    "Distinct Space Complexities": 72,
    "Non Trusted Time Complexities": 21,
    "Non Trusted Space Complexities": 35,
    "Time Complexity": {
      "True Positive": 391,
      "False Positive": 88,
      "True Negative": 11,
      "False negative": 11,
      "Accuracy": 0.8023952095808383,
      "Precision": 0.8162839248434238,
      "Recall": 0.972636815920398,
      "F1 Score": 0.8876276958002269
    },
    "Space Complexity": {
      "True Positive": 419,
      "False Positive": 47,
      "True Negative": 34,
      "False negative": 1,
      "Accuracy": 0.9041916167664671,
      "Precision": 0.8991416309012875,
      "Recall": 0.9976190476190476,
      "F1 Score": 0.945823927765237
    },
    "Time Complexity Classification": {
      "Constant complexity": 51,
      "Linear complexity": 178,
      "Exponential complexity": 7,
      "Polynomial complexity": 143,
      "Factorial complexity": 6,
      "Log complexity": 82
    },
    "Space Complexity Classification": {
      "Constant complexity": 169,
      "Linear complexity": 200,
      "Exponential complexity": 1,
      "Polynomial complexity": 77,
      "Factorial complexity": 0,
      "Log complexity": 15
    }
  }
]
