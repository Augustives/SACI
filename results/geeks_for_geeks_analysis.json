[
    {
        "Total Algorithms": 538,
        "Time Complexity Extracted": "511 extracted - 94.9814126394052%",
        "Space Complexity Extraced": "482 extracted - 89.59107806691449%",
        "URLs with problem": [
            "https://www.geeksforgeeks.org/interval-tree/",
            "https://www.geeksforgeeks.org/design-a-stack-with-find-middle-operation/",
            "https://www.geeksforgeeks.org/deletion-in-red-black-tree/",
            "https://www.geeksforgeeks.org/randomized-algorithms-set-1-introduction-and-analysis/",
            "https://www.geeksforgeeks.org/sparse-set/",
            "https://www.geeksforgeeks.org/binary-heap/",
            "https://www.geeksforgeeks.org/delete-operation-in-b-tree/",
            "https://www.geeksforgeeks.org/implement-reverse-dns-look-cache/",
            "https://www.geeksforgeeks.org/memory-efficient-doubly-linked-list/",
            "https://www.geeksforgeeks.org/n-queen-problem-using-branch-and-bound/",
            "https://www.geeksforgeeks.org/write-a-program-to-reverse-an-array-or-string/",
            "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/",
            "https://www.geeksforgeeks.org/introduction-and-array-implementation-of-queue/",
            "https://www.geeksforgeeks.org/optimal-substructure-property-in-dynamic-programming-dp-2/",
            "https://www.geeksforgeeks.org/randomized-algorithms-set-2-classification-and-applications/",
            "https://www.geeksforgeeks.org/implement-two-stacks-in-an-array/",
            "https://www.geeksforgeeks.org/data-structure-n-elements-o1-operations/",
            "https://www.geeksforgeeks.org/traveling-salesman-problem-using-branch-and-bound-2/",
            "https://www.geeksforgeeks.org/threaded-binary-tree/",
            "https://www.geeksforgeeks.org/deletion-in-k-dimensional-tree/",
            "https://www.geeksforgeeks.org/introduction-of-b-tree-2/",
            "https://www.geeksforgeeks.org/centroid-decomposition-of-tree/",
            "https://www.geeksforgeeks.org/types-of-binary-tree/",
            "https://www.geeksforgeeks.org/find-minimum-in-k-dimensional-tree/",
            "https://www.geeksforgeeks.org/insertion-in-splay-tree/",
            "https://www.geeksforgeeks.org/binomial-heap-2/",
            "https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/",
            "https://www.geeksforgeeks.org/searching-in-splay-tree/",
            "https://www.geeksforgeeks.org/trie-insert-and-search/",
            "https://www.geeksforgeeks.org/insert-operation-in-b-tree/",
            "https://www.geeksforgeeks.org/0-1-knapsack-using-branch-and-bound/",
            "https://www.geeksforgeeks.org/priority-queue-set-1-introduction/",
            "https://www.geeksforgeeks.org/implement-stack-using-queue/",
            "https://www.geeksforgeeks.org/efficiently-implement-k-queues-single-array/",
            "https://www.geeksforgeeks.org/randomized-algorithms-set-3-12-approximate-median/",
            "https://www.geeksforgeeks.org/find-the-k-most-frequent-words-from-a-file/",
            "https://www.geeksforgeeks.org/strassens-matrix-multiplication/"
        ],
        "Distinct Time Complexitys": 134,
        "Distinct Space Complexitys": 74,
        "Non Trusted Time Complexitys": 71,
        "Non Trusted Space Complexitys": 72,
        "Time Complexity": {
            "True Positive": 431,
            "False Positive": 80,
            "True Negative": 13,
            "False negative": 14,
            "Accuracy": 0.8252788104089219,
            "Precision": 0.8434442270058709,
            "Recall": 0.9685393258426966,
            "F1 Score": 0.901673640167364
        },
        "Space Complexity": {
            "True Positive": 440,
            "False Positive": 42,
            "True Negative": 56,
            "False negative": 0,
            "Accuracy": 0.9219330855018587,
            "Precision": 0.9128630705394191,
            "Recall": 1.0,
            "F1 Score": 0.9544468546637744
        },
        "Time Complexity Classification": {
            "Constant complexity": 54,
            "Linear complexity": 183,
            "Exponential complexity": 7,
            "Polynomial complexity": 161,
            "Factorial complexity": 9,
            "Log complexity": 80
        },
        "Space Complexity Classification": {
            "Constant complexity": 184,
            "Linear complexity": 194,
            "Exponential complexity": 1,
            "Polynomial complexity": 78,
            "Factorial complexity": 1,
            "Log complexity": 16
        }
    }
]